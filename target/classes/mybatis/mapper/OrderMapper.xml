<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.mapper.OrderMapper">
    <insert id="insertOrder" parameterType="com.example.demo.model.Model.resultType.OrderInfo">
        replace into orders
        (orderId, sellerId, buyerId, orderStatus, firstTime, orderName, orderDescription, orderUploadTime)
        values (
            #{orderId},
            #{sellerId},
            #{buyerId},
            #{orderStatus},
            #{firstTime},
            #{orderName},
            #{orderDescription},
            #{orderUploadTime}
            )
    </insert>

    <insert id="insertItems" parameterType="java.util.List">
        replace into item
        (orderId, number, itemName, itemType, cost, process)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.orderId},
            #{item.number},
            #{item.itemName},
            #{item.itemType},
            #{item.cost},
            #{item.process}
            )
        </foreach>
    </insert>

    <select id="getOrderByBuyerId" resultType="com.example.demo.model.Model.resultType.OrderInfo">
        SELECT * FROM orders where buyerId = #{userId};
    </select>

    <select id="getOrderListByItem" resultType="java.lang.String">
        select distinct orderId from item where 1=1
        <if test="itemName != '' and itemName!=null">
            and itemName LIKE '%${itemName}%'
        </if>
        <if test="type != '' and type!=null">
            and itemType = #{type}
        </if>
    </select>

    <select id="getOrderByOrderSearchDTO" resultType="com.example.demo.model.Model.resultType.OrderInfo">
        SELECT * FROM
        <if test="orderIdList.size()>0">
            (select * from orders
            where orderId =
            <foreach collection="orderIdList" item="item" separator="or">
                #{item}
            </foreach>
            ) as orderIdList
        </if>
        <if test="orderIdList.size()==0">
            orders
        </if>
        where
            1=1
        <if test="status!=-1 or statusS!=-1">
            and (orderStatus = #{status} or orderStatus = #{statusS})
        </if>
        <if test="companyId != '' and companyId!=null">
            and sellerId = #{companyId}
        </if>
        <if test="orderName != '' and orderName!=null">
            and orderName LIKE '%${orderName}%'
        </if>
        <if test="orderDescription != '' and orderDescription!=null">
            and orderDescription LIKE '%${orderDescription}%'
        </if>
        <if test="buyerId != '' and buyerId!=null">
            and buyerId = #{buyerId}
        </if>
        <if test="startTime != '' and startTime!=null">
            and
            <if test="witchTime == 0">
                orderUploadTime
            </if>
            &gt;= #{startTime}
        </if>
        <if test="endTime != '' and endTime!=null">
            and
            <if test="witchTime == 0">
                orderUploadTime
            </if>
            &lt;= #{endTime}
        </if>
        ;
    </select>

    <select id="getItemsByOrderId" resultType="com.example.demo.model.Model.OrderItem">
        SELECT * FROM item where orderId = #{orderId};
    </select>
</mapper>