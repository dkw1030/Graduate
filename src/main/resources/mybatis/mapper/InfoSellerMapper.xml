<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.mapper.InfoSellerMapper">

    <insert id="insertCompany" parameterType="com.example.demo.model.Model.resultType.CompanyInfo">
        replace into company
            (companyId, companyName, companyDescription, orderConfirmed, orderRejected, orderCompleted, orderFailed, valid)
             value (#{companyId}, #{companyName}, #{companyDescription}, #{orderConfirmed}, #{orderRejected}, #{orderCompleted}, #{orderFailed}, 1)
    </insert>

    <insert id="insertUserBasic" parameterType="java.util.List">
        replace into users
        ( userId, userRole, userName, companyId, departmentId)
        values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.userId},
            #{item.userRole},
            #{item.userName},
            #{item.companyId},
            #{item.departmentId}
            )
        </foreach>
    </insert>

    <insert id="insertDepartment" parameterType="java.util.List">
        replace into department
        (companyId, departmentId, departmentName)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.companyId},
            #{item.departmentId},
            #{item.departmentName}
            )
        </foreach>
    </insert>

    <insert id="insertAccount" parameterType="java.util.List">
        replace into account
        (userId, password)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.userId},
            "1"
            )
        </foreach>
    </insert>

<!--    <resultMap id="CompanyOverView" type="com.example.demo.model.Model.CompanyOverView">-->
<!--        <result column="company.companyId" property="companyId"/>-->
<!--        <result column="companyName" property="companyName"/>-->
<!--        <result column="companyDescription" property="companyDescription"/>-->
<!--        <result column="userName" property="boss"/>-->
<!--        <result column="count" property="number"/>-->
<!--        <result column="valid" property="valid"/>-->
<!--    </resultMap>-->
    <select id="getCompanyOverViewList" resultType="com.example.demo.model.Model.CompanyOverView">
        SELECT company.companyId, companyName, companyDescription, userName, a.count,valid
        FROM company, users, (select count(*) as count from company, users where company.companyId = users.companyId) as a
        where company.companyId = users.companyId and users.userRole = 1;
    </select>

</mapper>
